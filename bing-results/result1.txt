Welcome to Python.

org Notice: While JavaScript is not essential for this website, your interaction with the content will be limited.

Please turn JavaScript on for the full experience.

Skip to content â–¼ Close Python PSF Docs PyPI Jobs Community â–² The Python Network Donate â‰¡ Menu Search This Site GO A A Smaller Larger Reset Socialize Facebook Twitter Chat on IRC About Applications Quotes Getting Started Help Python Brochure Downloads All releases Source code Windows macOS Other Platforms License Alternative Implementations Documentation Docs Audio/Visual Talks Beginner's Guide Developer's Guide FAQ Non-English Docs PEP Index Python Books Python Essays Community Diversity Mailing Lists IRC Forums PSF Annual Impact Report Python Conferences Special Interest Groups Python Logo Python Wiki Code of Conduct Community Awards Get Involved Shared Stories Success Stories Arts Business Education Engineering Government Scientific Software Development News Python News PSF Newsletter PSF News PyCon US News News from the Community Events Python Events User Group Events Python Events Archive User Group Events Archive Submit an Event >_ Launch Interactive Shell # Python 3: Fibonacci series up to n >>> def fib(n): >>> a, b = 0, 1 >>> while a < n: >>> print(a, end=' ') >>> a, b = b, a+b >>> print() >>> fib(1000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Functions Defined The core of extensible programming is defining functions.

Python allows mandatory and optional arguments, keyword arguments, and even arbitrary argument lists.

More about defining functions in Python 3 # Python 3: List comprehensions >>> fruits = ['Banana', 'Apple', 'Lime'] >>> loud_fruits = [fruit.

upper() for fruit in fruits] >>> print(loud_fruits) ['BANANA', 'APPLE', 'LIME'] # List and the enumerate function >>> list(enumerate(fruits)) [(0, 'Banana'), (1, 'Apple'), (2, 'Lime')] Compound Data Types Lists (known as arrays in other languages) are one of the compound data types that Python understands.

Lists can be indexed, sliced and manipulated with other built-in functions.

More about lists in Python 3 # Python 3: Simple arithmetic >>> 1 / 2 0.

5 >>> 2 ** 3 8 >>> 17 / 3 # classic division returns a float 5.

666666666666667 >>> 17 // 3 # floor division 5 Intuitive Interpretation Calculations are simple with Python, and expression syntax is straightforward: the operators +, -, * and / work as expected; parentheses () can be used for grouping.

More about simple math functions in Python 3.

# For loop on a list >>> numbers = [2, 4, 6, 8] >>> product = 1 >>> for number in numbers: .

.. product = product * number ...

>>> print('The product is:', product) The product is: 384 All the Flow Youâ€™d Expect Python knows the usual control flow statements that other languages speak â€” if, for, while and range â€” with some of its own twists, of course.

More control flow tools in Python 3 # Simple output (with Unicode) >>> print("Hello, I'm Python!") Hello, I'm Python! # Input, assignment >>> name = input('What is your name?\n') What is your name? Python >>> print(f'Hi, {name}.

') Hi, Python.

Quick & Easy to Learn Experienced programmers in any other language can pick up Python very quickly, and beginners find the clean syntax and indentation structure easy to learn.

Whet your appetite with our Python 3 overview.

Python is a programming language that lets you work quickly and integrate systems more effectively.

Learn More Get Started Whether you're new to programming or an experienced developer, it's easy to learn and use Python.

Start with our Beginnerâ€™s Guide Download Python source code and installers are available for download for all versions! Latest: Python 3.

11.

2 Docs Documentation for Python's standard library, along with tutorials and guides, are available online.

docs.python.

org Jobs Looking for work or have a Python related position that you're trying to hire for? Our relaunched community-run job board is the place to go.

jobs.python.

org Latest News More 2023-02-15 The Case for a Second Developer-in-Residence for Python 2023-02-10 Python Packaging Strategy Discussion Summary - Part 1 2023-02-08 Python 3.

11.2, Python 3.10.10 and 3.12.

0 alpha 5 are available 2023-02-08 Announcing Python Software Foundation Fellow Members for Q4 2022! ðŸŽ‰ 2023-01-26 The PSF is hiring a Security Developer-in-Residence! Upcoming Events More 2023-02-23 PyLadies Amsterdam + MLOps.

Community Meetup 2023-02-25 PyCon PH 2023 2023-03-02 Global AI Bootcamp 2023-03-06 GeoPython 2023 2023-03-22 Python Meeting DÃ¼sseldorf Success Stories More "Python is all about automating repetitive tasks, leaving more time for your other SEO efforts.

" Using Python scripts to analyse SEO and broken links on your site by Marnix de Munck Use Python forâ€¦ More Web Development: Django, Pyramid, Bottle, Tornado, Flask, web2py GUI Development: tkInter, PyGObject, PyQt, PySide, Kivy, wxPython Scientific and Numeric: SciPy, Pandas, IPython Software Development: Buildbot, Trac, Roundup System Administration: Ansible, Salt, OpenStack, xonsh >>> Python Enhancement Proposals (PEPs): The future of Python is discussed here.

RSS >>> Python Software Foundation The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.

Learn more Become a Member Donate to the PSF â–² Back to Top About Applications Quotes Getting Started Help Python Brochure Downloads All releases Source code Windows macOS Other Platforms License Alternative Implementations Documentation Docs Audio/Visual Talks Beginner's Guide Developer's Guide FAQ Non-English Docs PEP Index Python Books Python Essays Community Diversity Mailing Lists IRC Forums PSF Annual Impact Report Python Conferences Special Interest Groups Python Logo Python Wiki Code of Conduct Community Awards Get Involved Shared Stories Success Stories Arts Business Education Engineering Government Scientific Software Development News Python News PSF Newsletter PSF News PyCon US News News from the Community Events Python Events User Group Events Python Events Archive User Group Events Archive Submit an Event Contributing Developer's Guide Issue Tracker python-dev list Core Mentorship Report a Security Issue â–² Back to Top Help & General Contact Diversity Initiatives Submit Website Bug Status Copyright Â©2001-2023.

Python Software Foundation Legal Statements Privacy Policy Powered by Heroku.

